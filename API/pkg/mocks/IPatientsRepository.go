// Code generated by mockery v2.42.3. DO NOT EDIT.

package mocks

import (
	entity "hospitalApi/pkg/entity"

	mock "github.com/stretchr/testify/mock"

	model "hospitalApi/pkg/model"
)

// IPatientsRepository is an autogenerated mock type for the IPatientsRepository type
type IPatientsRepository struct {
	mock.Mock
}

// Get provides a mock function with given fields: input
func (_m *IPatientsRepository) Get(input model.PatientCriteria) ([]entity.Patient, error) {
	ret := _m.Called(input)

	if len(ret) == 0 {
		panic("no return value specified for Get")
	}

	var r0 []entity.Patient
	var r1 error
	if rf, ok := ret.Get(0).(func(model.PatientCriteria) ([]entity.Patient, error)); ok {
		return rf(input)
	}
	if rf, ok := ret.Get(0).(func(model.PatientCriteria) []entity.Patient); ok {
		r0 = rf(input)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]entity.Patient)
		}
	}

	if rf, ok := ret.Get(1).(func(model.PatientCriteria) error); ok {
		r1 = rf(input)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIPatientsRepository creates a new instance of IPatientsRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIPatientsRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *IPatientsRepository {
	mock := &IPatientsRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
